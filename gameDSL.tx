GameWorld:
    regions += Region
    items += Item
    player = Player
    'start_position' start_position = [Region]
    'final_position' final_position = [Region]
;

Region:
    '<' name = GWID '>' '{'
        properties *= RegionProperties
        '::'
        connections *= Connection[',']
        '::'
        ('requirements' requirements += Requirement[','])?
    '}'
;

Requirement:
    item = GWID
;

Player:
    '(' name = GWID ')' '{'
        properties *= PlayerProperties
    '}'
;

Item:
    '[' name = GWID ']' '{'
        properties *= ItemProperties
        'isStatic' isStatic = BOOL
    '}'
;


Connection:
    direction = Direction '->' target = GWID
;

RegionProperties:
    BasicProperties | ContainsProperties
;

ContainsProperties:
    'contains' contains *= [Item][',']
;

PlayerProperties:
    BasicProperties | MovementProperties | PositionProperties | HealthProperties | InventoryProperties
;

BasicProperties:
    PortrayalProperties
;

InventoryProperties:
    'inventory' '{' inventory *= [Item][','] '}'
;

ItemProperties:
    BasicProperties | ActivationProperties | ContainsProperties
;

ActivationProperties:
    'activation' action = ActivationAction
;

ActivationAction:
    HealAction
;

HealAction:
    'heal' amount = INT
;

PortrayalProperties:
    'portrayal' portrayal = STRING
;

PositionProperties:
    'position' position = [Region]
;

HealthProperties:
    'health' health = INT
;

MovementProperties:
    MoveCommand | OpenCommand | TakeCommand | DropCommand | UseCommand
;

MoveCommand:
    'move' direction = Direction
;

OpenCommand:
    'open' object = GWID
;

TakeCommand:
    'take' object = GWID
;

DropCommand:
    'drop' object = GWID
;

UseCommand:
    'use' object = GWID
;


Keyword:
    'start_position' | 'final_position' | 'drop' | 'take' | 'open' | 'move' | 'N' | 'S' | 'E' | 'W' |
    'portrayal' | 'position' | 'heal' | 'health' | 'contains' | 'inventory' | 'isStatic' | 'requirements'
;

GWID:
    !Keyword ID
;

Direction:
    'N' | 'S' | 'E' | 'W'
;

Comment:
    /\/\*(.|\n)*?\*\//
;
