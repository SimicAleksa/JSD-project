GameWorld:
    regions += Region
    items += Item
    player = Player
    enemies += Enemy
    weapons += Weapon
    armors *= Armor
    settings += GeneralSettings
    'start_position' start_position = [Region]
    'final_position' final_position = [Region]
;

GeneralSettings:
    '*settings*' '{'
        ('dropOldWeapon' dropOldWeapon = BOOL)?
        ('dropOldArmor' dropOldArmor = BOOL)?
        'additionalTurnAfterUse' additionalTurnAfterUse = BOOL?
    '}'
;

Region:
    'region' name = GWID '{'
        properties *= RegionProperties
        '::'
        connections *= Connection[',']
        '::'
        ('requirements' requirements += Requirement[','])?
        ('environmental_dmg' environmental_dmg = EnvironmentalDamage)?
    '}'
;

Enemy:
    'enemy' name = GWID '{'
        (
            properties *= EnemyProperties
            'attacks' '{' attackTypes += AttackType '}'
            ('healing' '{'
                (
                    'chance' healingChance = FLOAT
                    'amount' healingAmount = INT
                    'amountVariance' healingAmountVariance = FLOAT
                )#
            '}')?
        )#
    '}'
;

AttackType:
    'attack' name = GWID '{'
        (
            'damage' damage = INT
            'damageVariance' damageVariance = FLOAT
            'frequency' frequency = FLOAT
        )#
    '}'
;

Requirement:
    item = GWID
;

Player:
    'player' name = GWID '{'
        (
            properties *= PlayerProperties
            'canEquip' '{' canEquip *= GWID[','] '}'
        )#
    '}'
;

Weapon:
    'weapon' name = GWID '{'
        (
            'type' type = GWID
            'healthDamage' healthDamage = INT
            ('healthCost' healthCost = INT)?
            ('manaCost' manaCost = INT)?
            ('requiredLevel' requiredLevel = INT)?
            modifiers *= Modifier
        )#
    '}'
;

Armor:
    'armor' name = GWID '{'
        (
            'type' type = GWID
            'defense' defense = INT
            ('requiredLevel' requiredLevel = INT)?
            modifiers *= Modifier
        )#
    '}'
;

Modifier:
    'modifies' modifiableAttribute = Modifiable
    'coefficients' coefficients += INT[',']
;

Modifiable:
    'health' | 'mana' | 'damage' | 'defense'
;


Item:
    'item' name = GWID '{'
        properties *= ItemProperties
        'isStatic' isStatic = BOOL
    '}'
;


Connection:
    direction = Direction '->' target = GWID
;

RegionProperties:
    BasicProperties | ContainsProperties
;

ContainsProperties:
    'contains' contains *= [Containable][',']
;

Containable:
    Item | Weapon | Armor
;

EnemyProperties:
    BasicProperties | PositionProperties | HealthProperties | ItemsToDrop | WeaponsToDrop | Experience
;

PlayerProperties:
    BasicProperties | MovementProperties | PositionProperties | HealthProperties | InventoryProperties | AttributeProperties | LevelProperties | BasicStatProperties
;

BasicStatProperties:
    ManaProperties | HealthProperties | UnarmedDamageProperties | DefenceProperties
;

AttributeProperties:
    VigorAttribute | EnduranceAttribute | StrengthAttribute | IntelligenceAttribute
;

BasicProperties:
    PortrayalProperties
;

InventoryProperties:
    'inventory' '{' inventory *= [Item][','] '}'
;

LevelProperties:
    CurrentExpProperty | NeededExpProperty | LevelProperty
;

CurrentExpProperty:
    'currentExperience' currentExperience = INT
;

NeededExpProperty:
    'neededExperienceForLevelUp' neededExperienceForLevelUp = INT
;

LevelProperty:
    'level' level = INT
;

Experience:
    'xp' xp = INT
;

ItemProperties:
    BasicProperties | ActivationProperties | ContainsProperties
;

WeaponProperties:
    'damage' damage = INT
;

ActivationProperties:
    'activation' action = ActivationAction
;

ActivationAction:
    HealAction | AttackAction
;

HealAction:
    'heal' amount = INT
;

AttackAction:
    'attack' amount = INT
;

EnvironmentalDamage:
    'damage' amount = INT
;

PortrayalProperties:
    'portrayal' portrayal = STRING
;

ItemsToDrop:
    'drops' '{' inventory *= [Item][','] '}'
;

WeaponsToDrop:
    'dropsWeapon' '{' inventory *= [Weapon][','] '}'
;

PositionProperties:
    'position' position = [Region]
;

HealthProperties:
    'health' health = INT
;

ManaProperties:
    'mana' mana = INT
;

UnarmedDamageProperties:
    'damage' unarmed_damage = INT
;

DefenceProperties:
    'defence' defence = INT
;

VigorAttribute:
    'vigor' vigor = INT
;

EnduranceAttribute:
    'endurance' endurance = INT
;

StrengthAttribute:
    'strength' strength = INT
;

IntelligenceAttribute:
    'intelligence' intelligence = INT
;

MovementProperties:
    MoveCommand | OpenCommand | TakeCommand | DropCommand | UseCommand
;

MoveCommand:
    'move' direction = Direction
;

OpenCommand:
    'open' object = GWID
;

TakeCommand:
    'take' object = GWID
;

DropCommand:
    'drop' object = GWID
;

UseCommand:
    'use' object = GWID
;

Keyword:
    'start_position' | 'final_position' | 'drop' | 'take' | 'open' | 'move' | 'N' | 'S' | 'E' | 'W' |
    'portrayal' | 'position' | 'heal' | 'health' | 'contains' | 'inventory' | 'isStatic' |
    'requirements' | 'damage' | 'environmental_dmg' | 'xp' | 'vigor' | 'endurance' | 'strength' | 'currentExperience' |
    'neededExperienceForLevelUp' | 'dropsWeapon' | 'level' |
    'region' | 'item' | 'player' | 'enemy' | 'weapon'
;

GWID:
    !Keyword ID
;

Direction:
    'N' | 'S' | 'E' | 'W'
;

Comment:
    /\/\*(.|\n)*?\*\//
;
